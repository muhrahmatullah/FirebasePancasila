{
  "_args": [
    [
      {
        "raw": "eslint-plugin-promise@^3.6.0",
        "scope": null,
        "escapedName": "eslint-plugin-promise",
        "name": "eslint-plugin-promise",
        "rawSpec": "^3.6.0",
        "spec": ">=3.6.0 <4.0.0",
        "type": "range"
      },
      "/Users/muhrahmatullah/FirebaseProjects/firebasepancasila/functions"
    ]
  ],
  "_from": "eslint-plugin-promise@>=3.6.0 <4.0.0",
  "_id": "eslint-plugin-promise@3.8.0",
  "_inCache": true,
  "_location": "/eslint-plugin-promise",
  "_nodeVersion": "8.11.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/eslint-plugin-promise_3.8.0_1527194707374_0.6170984129537769"
  },
  "_npmUser": {
    "name": "macklinu",
    "email": "macklinu@gmail.com"
  },
  "_npmVersion": "5.10.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "eslint-plugin-promise@^3.6.0",
    "scope": null,
    "escapedName": "eslint-plugin-promise",
    "name": "eslint-plugin-promise",
    "rawSpec": "^3.6.0",
    "spec": ">=3.6.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/eslint-plugin-promise/-/eslint-plugin-promise-3.8.0.tgz",
  "_shasum": "65ebf27a845e3c1e9d6f6a5622ddd3801694b621",
  "_shrinkwrap": null,
  "_spec": "eslint-plugin-promise@^3.6.0",
  "_where": "/Users/muhrahmatullah/FirebaseProjects/firebasepancasila/functions",
  "author": {
    "name": "jden",
    "email": "jason@denizac.org"
  },
  "bugs": {
    "url": "https://github.com/xjamundx/eslint-plugin-promise/issues"
  },
  "dependencies": {},
  "description": "Enforce best practices for JavaScript promises",
  "devDependencies": {
    "doctoc": "^1.3.0",
    "eslint": "^4.17.0",
    "eslint-config-prettier": "^2.9.0",
    "eslint-config-standard": "^11.0.0-beta.0",
    "eslint-plugin-eslint-plugin": "^1.4.0",
    "eslint-plugin-import": "^2.8.0",
    "eslint-plugin-jest": "^21.12.2",
    "eslint-plugin-node": "^6.0.0",
    "eslint-plugin-prettier": "^2.6.0",
    "eslint-plugin-promise": "./",
    "eslint-plugin-standard": "^3.0.1",
    "husky": "^0.14.3",
    "jest": "^22.4.2",
    "jest-runner-eslint": "^0.4.0",
    "lint-staged": "^6.1.0",
    "prettier": "^1.10.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-JiFL9UFR15NKpHyGii1ZcvmtIqa3UTwiDAGb8atSffe43qJ3+1czVGN6UtkklpcJ2DVnqvTMzEKRaJdBkAL2aQ==",
    "shasum": "65ebf27a845e3c1e9d6f6a5622ddd3801694b621",
    "tarball": "https://registry.npmjs.org/eslint-plugin-promise/-/eslint-plugin-promise-3.8.0.tgz",
    "fileCount": 27,
    "unpackedSize": 37183,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbByRUCRA9TVsSAnZWagAAQ4cP/2vGxsI+T+MLeaqnUymW\nzbU03JXbgXDPER/r2ymvs/KZTt6YvEJbpemlbmuxy96ljeWKTQVHVkbnftBH\nOQScy2KF7stMDVNs+0m+QL91x+OZJ6gmRi3CkXiGrHnas15KbQDC7/CAr3mq\nPNhaKkUAVESLE/xUdqTabUXPzPU0lsuJd4AE+Ie64GLvrWGUUE2PGrbaojNZ\n+eKhEDRIQVbeE64YmnxY6JuexFaf1Z4+w9IiRVSEgKcrEm3RuXEEA4pJxdNb\nmddDz4cJyz2nfwM3181eDcG666b6YM9GOdMzeTGpVzsjV1dFl1cxr6pceChV\nr/40MLm6xcc/yyh3R1G11gE14jJUdzSfIbk8fCRBxizXLbMBqcn8fqLYXhx7\n/Kd/G3SBmru1mlIB/+Hbfrhsal2Ekts7W68fbzR2+bCE8b0WKl+JdcAuAr2w\nDrwgCd09zWi/6lbSKFEMoVeQv5987ZHaktJTbPbrjbQKS6/gUTCgbH6xK1Tp\nJsi52t4Ahvudo4osNCZK4rEB4ScAH+/tDNQTA73KekMoKfCqpBigQNwbbfcE\nVPaP7x21S9JRPOOHWO4EZ00nanRgeKPgOHAmWj2Gg1A+PnDPvUaSCVyEG6g+\nucvxsJWp23PSGo5w8uU+enoHWYXIB60MbWrt0cUZeF52KrpLxnKyDIarZoYl\nIm9s\r\n=rF8K\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4"
  },
  "gitHead": "67dad979790f1040afffd02eb037532140ec2e96",
  "homepage": "https://github.com/xjamundx/eslint-plugin-promise#readme",
  "jest": {
    "projects": [
      {
        "displayName": "test",
        "testEnvironment": "node"
      },
      {
        "runner": "jest-runner-eslint",
        "displayName": "lint",
        "testMatch": [
          "<rootDir>/rules/**/*.js",
          "<rootDir>/__tests__/**/*.js",
          "<rootDir>/index.js"
        ]
      }
    ]
  },
  "keywords": [
    "eslint",
    "eslintplugin",
    "eslint-plugin",
    "promise",
    "promises"
  ],
  "license": "ISC",
  "lint-staged": {
    "concurrent": false,
    "linters": {
      "{README.md,CONTRIBUTING.md}": [
        "doctoc --maxlevel 3 --notitle",
        "git add"
      ],
      "*.js": [
        "prettier --write",
        "eslint --fix",
        "git add"
      ],
      "*.+(json|md)": [
        "prettier --write",
        "git add"
      ]
    }
  },
  "maintainers": [
    {
      "name": "macklinu",
      "email": "macklinu@gmail.com"
    },
    {
      "name": "xjamundx",
      "email": "jamund@gmail.com"
    }
  ],
  "name": "eslint-plugin-promise",
  "optionalDependencies": {},
  "prettier": {
    "semi": false,
    "singleQuote": true,
    "proseWrap": "always"
  },
  "readme": "# eslint-plugin-promise\n\nEnforce best practices for JavaScript promises.\n\n[![travis-ci](https://travis-ci.org/xjamundx/eslint-plugin-promise.svg)](https://travis-ci.org/xjamundx/eslint-plugin-promise)\n[![npm version](https://badge.fury.io/js/eslint-plugin-promise.svg)](https://www.npmjs.com/package/eslint-plugin-promise)\n[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n* [Installation](#installation)\n* [Usage](#usage)\n* [Rules](#rules)\n* [Maintainers](#maintainers)\n* [License](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Installation\n\nYou'll first need to install [ESLint](http://eslint.org):\n\n```\n$ npm install eslint --save-dev\n```\n\nNext, install `eslint-plugin-promise`:\n\n```\n$ npm install eslint-plugin-promise --save-dev\n```\n\n**Note:** If you installed ESLint globally (using the `-g` flag) then you must\nalso install `eslint-plugin-promise` globally.\n\n## Usage\n\nAdd `promise` to the plugins section of your `.eslintrc` configuration file. You\ncan omit the `eslint-plugin-` prefix:\n\n```json\n{\n  \"plugins\": [\"promise\"]\n}\n```\n\nThen configure the rules you want to use under the rules section.\n\n```json\n{\n  \"rules\": {\n    \"promise/always-return\": \"error\",\n    \"promise/no-return-wrap\": \"error\",\n    \"promise/param-names\": \"error\",\n    \"promise/catch-or-return\": \"error\",\n    \"promise/no-native\": \"off\",\n    \"promise/no-nesting\": \"warn\",\n    \"promise/no-promise-in-callback\": \"warn\",\n    \"promise/no-callback-in-promise\": \"warn\",\n    \"promise/avoid-new\": \"warn\",\n    \"promise/no-new-statics\": \"error\",\n    \"promise/no-return-in-finally\": \"warn\",\n    \"promise/valid-params\": \"warn\"\n  }\n}\n```\n\nor start with the recommended rule set\n\n```json\n{\n  \"extends\": [\"plugin:promise/recommended\"]\n}\n```\n\n## Rules\n\n| rule                                                     | description                                                                      | recommended | fixable  |\n| -------------------------------------------------------- | -------------------------------------------------------------------------------- | ----------- | -------- |\n| [`catch-or-return`][catch-or-return]                     | Enforces the use of `catch()` on un-returned promises.                           | :bangbang:  |          |\n| [`no-return-wrap`][no-return-wrap]                       | Avoid wrapping values in `Promise.resolve` or `Promise.reject` when not needed.  | :bangbang:  |          |\n| [`param-names`][param-names]                             | Enforce consistent param names when creating new promises.                       | :bangbang:  | :wrench: |\n| [`always-return`][always-return]                         | Return inside each `then()` to create readable and reusable Promise chains.      | :bangbang:  |          |\n| [`no-native`][no-native]                                 | In an ES5 environment, make sure to create a `Promise` constructor before using. |             |          |\n| [`no-nesting`][no-nesting]                               | Avoid nested `then()` or `catch()` statements                                    | :warning:   |          |\n| [`no-promise-in-callback`][no-promise-in-callback]       | Avoid using promises inside of callbacks                                         | :warning:   |          |\n| [`no-callback-in-promise`][no-callback-in-promise]       | Avoid calling `cb()` inside of a `then()` (use [nodeify][] instead)              | :warning:   |          |\n| [`avoid-new`][avoid-new]                                 | Avoid creating `new` promises outside of utility libs (use [pify][] instead)     |             |          |\n| [`no-new-statics`][no-new-statics]                       | Avoid calling `new` on a Promise static method                                   | :bangbang:  |          |\n| [`no-return-in-finally`][no-return-in-finally]           | Disallow return statements in `finally()`                                        | :warning:   |          |\n| [`valid-params`][valid-params]                           | Ensures the proper number of arguments are passed to Promise functions           | :warning:   |          |\n| [`prefer-await-to-then`][prefer-await-to-then]           | Prefer `await` to `then()` for reading Promise values                            | :seven:     |          |\n| [`prefer-await-to-callbacks`][prefer-await-to-callbacks] | Prefer async/await to the callback pattern                                       | :seven:     |          |\n\n**Key**\n\n| icon       | description                                     |\n| ---------- | ----------------------------------------------- |\n| :bangbang: | Reports as error in recommended configuration   |\n| :warning:  | Reports as warning in recommended configuration |\n| :seven:    | ES2017 Async Await rules                        |\n| :wrench:   | Rule is fixable with `eslint --fix`             |\n\n## Maintainers\n\n* Jamund Ferguson - [@xjamundx][]\n* Macklin Underdown - [@macklinu][]\n\n## License\n\n* (c) MMXV jden <mailto:jason@denizac.org> - ISC license.\n* (c) 2016 Jamund Ferguson <mailto:jamund@gmail.com> - ISC license.\n\n[catch-or-return]: docs/rules/catch-or-return.md\n[no-return-wrap]: docs/rules/no-return-wrap.md\n[param-names]: docs/rules/param-names.md\n[always-return]: docs/rules/always-return.md\n[no-native]: docs/rules/no-native.md\n[no-nesting]: docs/rules/no-nesting.md\n[no-promise-in-callback]: docs/rules/no-promise-in-callback.md\n[no-callback-in-promise]: docs/rules/no-callback-in-promise.md\n[avoid-new]: docs/rules/avoid-new.md\n[no-new-statics]: docs/rules/no-new-statics.md\n[no-return-in-finally]: docs/rules/no-return-in-finally.md\n[valid-params]: docs/rules/valid-params.md\n[prefer-await-to-then]: docs/rules/prefer-await-to-then.md\n[prefer-await-to-callbacks]: docs/rules/prefer-await-to-callbacks.md\n[nodeify]: https://www.npmjs.com/package/nodeify\n[pify]: https://www.npmjs.com/package/pify\n[@macklinu]: https://github.com/macklinu\n[@xjamundx]: https://github.com/xjamundx\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/xjamundx/eslint-plugin-promise.git"
  },
  "scripts": {
    "lint": "eslint index.js rules __tests__ --ignore-pattern '**/*.json'",
    "precommit": "lint-staged",
    "test": "jest"
  },
  "version": "3.8.0"
}
